# Explicitly declare the volume path shared between all containers.
# Not necessarily needed, but it makes me feel better have it explicit.
# http://docs.drone.io/workspace/
workspace:
  base: /drone
  path: src/github.com/aaa-ncnu/docker-drupal-starter

# Containers to run throughout pipeline.
# This example doesn't yet have any.
# http://docs.drone.io/services/
# services:

# Pipeline steps to execute.
# http://docs.drone.io/pipelines/
pipeline:
  # We call this step "build_drupal", we create a YAML reference to it with
  # "&drupal-image" so that we may reuse the configuration in other steps.
  build_drupal: &drupal-image
    image: plugins/docker
    # Docker image registry repo, could be hub.docker.com or another provider.
    repo: aaadigital/drupal-starter
    context: drupal
    dockerfile: drupal/Dockerfile
    tags: "${DRONE_COMMIT_SHA}"
    debug: true
    # dry_run prevents push to image registry.
    dry_run: true
    # Prevent cleanup of intermiediary Docker images, allowing other steps to
    # to reuse the cached layers.
    purge: false
    secrets:
      # These are set via Drone (either in the UI or using the CLI), the
      # credentials would match the Docker registry repo.
      - docker_username
      - docker_password
    # We set the storage path to reside within workspace.base to persist
    # throughout the pipeline so that layer caching is available.
    storage_path: /drone/docker-storage
    when:
      event: push

  # TODO: Add unit test

  # If we have reached this point then our automated tests have passed and we
  # want to release the Docker image(s) we've built to our image registry.
  publish_drupal_commit:
    # We use this YAML reference "<<: *drupal-image" to rebuild our image from
    # the "build_drupal" step's configuration (&drupal-image). Since our Docker
    # image is cached this will happen very quickly instead of rebuilding.
    <<: *drupal-image
    tags: latest
    # Now we want to push to the registry.
    dry_run: false
    when:
      event: push
      branch:
        # We don't want to use this step if we re on the master branch.
        exclude: [ master ]

  # If the push was to the master branch, we also want to tag our image as
  # "latest" and push it to the registry.
  publish_drupal_latest:
    <<: *drupal-image
    tags: [ "${DRONE_COMMIT_SHA}", latest ]
    dry_run: false
    when:
      event: push
      # When on the master branch we'll tag with the SHA and "latest".
      branch: master

  drupal-image-cleanup:
    <<: *drupal-image
    # After we are done with intermediary (and final) images, purge them from
    # the build agent.
    purge: true
    when:
      event: push
      # Ensure the cleanup runs even when an error occurs.
      status: [ failure, success ]
